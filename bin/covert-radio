#!/usr/bin/ruby

require 'pathname'

HOME = Pathname.new(File.expand_path(File.dirname(File.readlink(__FILE__)))).parent
LIB = HOME + "lib"

require LIB + "CovertRadio"

# Test if a command os given (e.g. tune or off)
if ARGV.size < 1
	puts "Need command..."
	exit
end

# Test if the number of arguments is correct
if ARGV[0].downcase == "listen"
	if ARGV.size != 2
		puts "Wrong number of arguments!"
		exit
	end
else
	if ARGV.size != 1
		puts "Wrong number of arguments!"
		exit
	end
end

# Get command and station. Station will only be valid if command tune is used.
command = ARGV[0].downcase
station = ARGV[1] if ARGV[1]

# Create Radio instance where the actual work will be done.
radio = CovertRadio.new

# For every command call the equivalent method on Radio
case command
	when "pause"
		radio.pause
	when "resume"
		radio.pause 		#it's a feature, not a bug
	when "off"
		radio.off
	when "on-air"
		radio.on_air 
	when "on-air-history"
		radio.on_air_history 
	when "station"
		radio.station
	when "station-list"
		radio.station_list
	when "listen"
		radio.listen station
	when "help"
		radio.help
	else
		puts "Invalid command! Run 'covert-radio help' for more info."
		exit
end
